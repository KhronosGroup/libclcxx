// RUN: %clang_cc1 %s -triple spir-unknown-unknown -cl-std=c++ -pedantic -O0 -Wall -Wno-unused-variable -verify  -emit-llvm -o -
// RUN: %clang_cc1 %s -triple spir-unknown-unknown -cl-std=c++ -pedantic -O0 -Wall -Wno-unused-variable -verify -cl-fp16-enable -emit-llvm -o -
// RUN: %clang_cc1 %s -triple spir-unknown-unknown -cl-std=c++ -pedantic -O0 -Wall -Wno-unused-variable -verify -cl-fp64-enable -emit-llvm -o -
// RUN: %clang_cc1 %s -triple spir-unknown-unknown -cl-std=c++ -pedantic -O0 -Wall -Wno-unused-variable -verify -cl-fp16-enable -cl-fp64-enable -emit-llvm -o -



#ifdef cl_khr_fp16
    #pragma OPENCL EXTENSION cl_khr_fp16: enable
#endif // cl_khr_fp16

#include <opencl_work_item>


kernel void worker()
{
    // Vectors and vector references.
    volatile       bool16      vec001 = bool16();
    volatile       bool4       vec002 = bool4();
    const          uchar16   & vec003 = uchar16();
                   uchar2   && vec004 = uchar2();
    volatile       char8    && vec005 = char8();
    const          char16      vec006 = char16();
    volatile       ushort16 && vec007 = ushort16();
                   ushort8  && vec008 = ushort8();
    const volatile short3      vec009 = short3();
    const          short4    & vec010 = short4();
    const          uint8    && vec011 = uint8();
                   uint4    && vec012 = uint4();
    const          int16       vec013 = int16();
                   int8     && vec014 = int8();
    volatile       ulong4   && vec015 = ulong4();
    volatile       ulong8   && vec016 = ulong8();
    const volatile long2       vec017 = long2();
    const          long4       vec018 = long4();
    #ifdef cl_khr_fp16
    volatile       half4    && vec019 = half4();
    const          half4       vec020 = half4();
    #endif // cl_khr_fp16
                   float4      vec021 = float4();
    volatile       float4   && vec022 = float4();
    #ifdef cl_khr_fp64
                   double4     vec023 = double4();
    volatile       double2  && vec024 = double2();
    #endif // cl_khr_fp64
    
    // Scalars and scalar references.
                   bool        sv001 = bool();
    volatile       bool     && sv002 = bool();
    const volatile uchar    && sv003 = uchar();
    volatile       uchar    && sv004 = uchar();
    volatile       char     && sv005 = char();
                   char        sv006 = char();
                   ushort      sv007 = ushort();
    volatile       ushort      sv008 = ushort();
    const volatile short    && sv009 = short();
    volatile       short    && sv010 = short();
    volatile       uint        sv011 = uint();
                   uint        sv012 = uint();
    const          int      && sv013 = int();
                   int         sv014 = int();
                   ulong       sv015 = ulong();
    volatile       ulong       sv016 = ulong();
    const volatile long     && sv017 = long();
    const volatile long     && sv018 = long();
    #ifdef cl_khr_fp16
    volatile       half        sv019 = half();
    const          half      & sv020 = half();
    #endif // cl_khr_fp16
    const          float    && sv021 = float();
    const volatile float    && sv022 = float();
    #ifdef cl_khr_fp64
                   double   && sv023 = double();
    const          double    & sv024 = double();
    #endif // cl_khr_fp64

    // Scalar to vector conversion (variables).
    // auto     r0001 = vec001 + sv001;
    // bool4    r0002 = sv002 + vec002;
    // auto     r0003 = vec001 + sv003;
    // auto     r0004 = sv004 + vec002;
    // auto     r0005 = vec001 + sv005;
    // auto     r0006 = sv006 + vec002;
    // bool16   r0007 = vec001 + sv007;
    // bool4    r0008 = sv008 + vec002;
    // bool16   r0009 = vec001 + sv009;
    // auto     r0010 = sv010 + vec002;
    // bool16   r0011 = vec001 + sv011;
    // auto     r0012 = sv012 + vec002;
    // bool16   r0013 = vec001 + sv013;
    // auto     r0014 = sv014 + vec002;
    // bool16   r0015 = vec001 + sv015;
    // bool4    r0016 = sv016 + vec002;
    // bool16   r0017 = vec001 + sv017;
    // bool4    r0018 = sv018 + vec002;
    #ifdef cl_khr_fp16
    // auto     r0019 = vec001 + sv019;
    // auto     r0020 = sv020 + vec002;
    #endif // cl_khr_fp16
    // auto     r0021 = vec001 + sv021;
    // auto     r0022 = sv022 + vec002;
    #ifdef cl_khr_fp64
    // bool16   r0023 = vec001 + sv023;
    // auto     r0024 = sv024 + vec002;
    #endif // cl_khr_fp64
    uchar16  r0025 = vec003 + sv001;
    uchar2   r0026 = sv002 + vec004;
    uchar16  r0027 = vec003 + sv003;
    uchar2   r0028 = sv004 + vec004;
    auto     r0029 = vec003 + sv005; // expected-warning-re {{non-constant-expression is narrowed from type {{.*}} to {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}}
    auto     r0030 = sv006 + vec004; // expected-warning-re {{non-constant-expression is narrowed from type {{.*}} to {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}}
    auto     r0031 = vec003 + sv007; // expected-warning-re {{non-constant-expression is narrowed from type {{.*}} to {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}}
    uchar2   r0032 = sv008 + vec004; // expected-warning-re {{non-constant-expression is narrowed from type {{.*}} to {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}}
    auto     r0033 = vec003 + sv009; // expected-warning-re {{non-constant-expression is narrowed from type {{.*}} to {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}}
    auto     r0034 = sv010 + vec004; // expected-warning-re {{non-constant-expression is narrowed from type {{.*}} to {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}}
    uchar16  r0035 = vec003 + sv011; // expected-warning-re {{non-constant-expression is narrowed from type {{.*}} to {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}}
    auto     r0036 = sv012 + vec004; // expected-warning-re {{non-constant-expression is narrowed from type {{.*}} to {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}}
    uchar16  r0037 = vec003 + sv013; // expected-warning-re {{non-constant-expression is narrowed from type {{.*}} to {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}}
    uchar2   r0038 = sv014 + vec004; // expected-warning-re {{non-constant-expression is narrowed from type {{.*}} to {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}}
    auto     r0039 = vec003 + sv015; // expected-warning-re {{non-constant-expression is narrowed from type {{.*}} to {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}}
    auto     r0040 = sv016 + vec004; // expected-warning-re {{non-constant-expression is narrowed from type {{.*}} to {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}}
    uchar16  r0041 = vec003 + sv017; // expected-warning-re {{non-constant-expression is narrowed from type {{.*}} to {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}}
    auto     r0042 = sv018 + vec004; // expected-warning-re {{non-constant-expression is narrowed from type {{.*}} to {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}}
    #ifdef cl_khr_fp16
    auto     r0043 = vec003 + sv019; // expected-warning-re {{non-constant-expression is narrowed from type {{.*}} to {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}}
    uchar2   r0044 = sv020 + vec004; // expected-warning-re {{non-constant-expression is narrowed from type {{.*}} to {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}}
    #endif // cl_khr_fp16
    uchar16  r0045 = vec003 + sv021; // expected-warning-re {{non-constant-expression is narrowed from type {{.*}} to {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}}
    uchar2   r0046 = sv022 + vec004; // expected-warning-re {{non-constant-expression is narrowed from type {{.*}} to {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}}
    #ifdef cl_khr_fp64
    auto     r0047 = vec003 + sv023; // expected-warning-re {{non-constant-expression is narrowed from type {{.*}} to {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}}
    auto     r0048 = sv024 + vec004; // expected-warning-re {{non-constant-expression is narrowed from type {{.*}} to {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}}
    #endif // cl_khr_fp64
    char8    r0049 = vec005 + sv001;
    auto     r0050 = sv002 + vec006;
    auto     r0051 = vec005 + sv003; // expected-warning-re {{non-constant-expression is narrowed from type {{.*}} to {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}}
    auto     r0052 = sv004 + vec006; // expected-warning-re {{non-constant-expression is narrowed from type {{.*}} to {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}}
    auto     r0053 = vec005 + sv005;
    auto     r0054 = sv006 + vec006;
    auto     r0055 = vec005 + sv007; // expected-warning-re {{non-constant-expression is narrowed from type {{.*}} to {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}}
    char16   r0056 = sv008 + vec006; // expected-warning-re {{non-constant-expression is narrowed from type {{.*}} to {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}}
    auto     r0057 = vec005 + sv009; // expected-warning-re {{non-constant-expression is narrowed from type {{.*}} to {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}}
    auto     r0058 = sv010 + vec006; // expected-warning-re {{non-constant-expression is narrowed from type {{.*}} to {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}}
    auto     r0059 = vec005 + sv011; // expected-warning-re {{non-constant-expression is narrowed from type {{.*}} to {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}}
    char16   r0060 = sv012 + vec006; // expected-warning-re {{non-constant-expression is narrowed from type {{.*}} to {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}}
    auto     r0061 = vec005 + sv013; // expected-warning-re {{non-constant-expression is narrowed from type {{.*}} to {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}}
    char16   r0062 = sv014 + vec006; // expected-warning-re {{non-constant-expression is narrowed from type {{.*}} to {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}}
    char8    r0063 = vec005 + sv015; // expected-warning-re {{non-constant-expression is narrowed from type {{.*}} to {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}}
    auto     r0064 = sv016 + vec006; // expected-warning-re {{non-constant-expression is narrowed from type {{.*}} to {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}}
    auto     r0065 = vec005 + sv017; // expected-warning-re {{non-constant-expression is narrowed from type {{.*}} to {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}}
    auto     r0066 = sv018 + vec006; // expected-warning-re {{non-constant-expression is narrowed from type {{.*}} to {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}}
    #ifdef cl_khr_fp16
    auto     r0067 = vec005 + sv019; // expected-warning-re {{non-constant-expression is narrowed from type {{.*}} to {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}}
    auto     r0068 = sv020 + vec006; // expected-warning-re {{non-constant-expression is narrowed from type {{.*}} to {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}}
    #endif // cl_khr_fp16
    char8    r0069 = vec005 + sv021; // expected-warning-re {{non-constant-expression is narrowed from type {{.*}} to {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}}
    auto     r0070 = sv022 + vec006; // expected-warning-re {{non-constant-expression is narrowed from type {{.*}} to {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}}
    #ifdef cl_khr_fp64
    char8    r0071 = vec005 + sv023; // expected-warning-re {{non-constant-expression is narrowed from type {{.*}} to {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}}
    auto     r0072 = sv024 + vec006; // expected-warning-re {{non-constant-expression is narrowed from type {{.*}} to {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}}
    #endif // cl_khr_fp64
    auto     r0073 = vec007 + sv001;
    ushort8  r0074 = sv002 + vec008;
    ushort16 r0075 = vec007 + sv003;
    auto     r0076 = sv004 + vec008;
    ushort16 r0077 = vec007 + sv005; // expected-warning-re {{non-constant-expression is narrowed from type {{.*}} to {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}}
    ushort8  r0078 = sv006 + vec008; // expected-warning-re {{non-constant-expression is narrowed from type {{.*}} to {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}}
    auto     r0079 = vec007 + sv007;
    auto     r0080 = sv008 + vec008;
    auto     r0081 = vec007 + sv009; // expected-warning-re {{non-constant-expression is narrowed from type {{.*}} to {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}}
    ushort8  r0082 = sv010 + vec008; // expected-warning-re {{non-constant-expression is narrowed from type {{.*}} to {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}}
    ushort16 r0083 = vec007 + sv011; // expected-warning-re {{non-constant-expression is narrowed from type {{.*}} to {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}}
    ushort8  r0084 = sv012 + vec008; // expected-warning-re {{non-constant-expression is narrowed from type {{.*}} to {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}}
    auto     r0085 = vec007 + sv013; // expected-warning-re {{non-constant-expression is narrowed from type {{.*}} to {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}}
    ushort8  r0086 = sv014 + vec008; // expected-warning-re {{non-constant-expression is narrowed from type {{.*}} to {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}}
    ushort16 r0087 = vec007 + sv015; // expected-warning-re {{non-constant-expression is narrowed from type {{.*}} to {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}}
    ushort8  r0088 = sv016 + vec008; // expected-warning-re {{non-constant-expression is narrowed from type {{.*}} to {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}}
    auto     r0089 = vec007 + sv017; // expected-warning-re {{non-constant-expression is narrowed from type {{.*}} to {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}}
    ushort8  r0090 = sv018 + vec008; // expected-warning-re {{non-constant-expression is narrowed from type {{.*}} to {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}}
    #ifdef cl_khr_fp16
    auto     r0091 = vec007 + sv019; // expected-warning-re {{non-constant-expression is narrowed from type {{.*}} to {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}}
    ushort8  r0092 = sv020 + vec008; // expected-warning-re {{non-constant-expression is narrowed from type {{.*}} to {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}}
    #endif // cl_khr_fp16
    ushort16 r0093 = vec007 + sv021; // expected-warning-re {{non-constant-expression is narrowed from type {{.*}} to {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}}
    auto     r0094 = sv022 + vec008; // expected-warning-re {{non-constant-expression is narrowed from type {{.*}} to {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}}
    #ifdef cl_khr_fp64
    auto     r0095 = vec007 + sv023; // expected-warning-re {{non-constant-expression is narrowed from type {{.*}} to {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}}
    auto     r0096 = sv024 + vec008; // expected-warning-re {{non-constant-expression is narrowed from type {{.*}} to {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}}
    #endif // cl_khr_fp64
    auto     r0097 = vec009 + sv001;
    short4   r0098 = sv002 + vec010;
    auto     r0099 = vec009 + sv003;
    short4   r0100 = sv004 + vec010;
    auto     r0101 = vec009 + sv005;
    auto     r0102 = sv006 + vec010;
    short3   r0103 = vec009 + sv007; // expected-warning-re {{non-constant-expression is narrowed from type {{.*}} to {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}}
    auto     r0104 = sv008 + vec010; // expected-warning-re {{non-constant-expression is narrowed from type {{.*}} to {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}}
    short3   r0105 = vec009 + sv009;
    short4   r0106 = sv010 + vec010;
    auto     r0107 = vec009 + sv011; // expected-warning-re {{non-constant-expression is narrowed from type {{.*}} to {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}}
    short4   r0108 = sv012 + vec010; // expected-warning-re {{non-constant-expression is narrowed from type {{.*}} to {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}}
    short3   r0109 = vec009 + sv013; // expected-warning-re {{non-constant-expression is narrowed from type {{.*}} to {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}}
    auto     r0110 = sv014 + vec010; // expected-warning-re {{non-constant-expression is narrowed from type {{.*}} to {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}}
    auto     r0111 = vec009 + sv015; // expected-warning-re {{non-constant-expression is narrowed from type {{.*}} to {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}}
    auto     r0112 = sv016 + vec010; // expected-warning-re {{non-constant-expression is narrowed from type {{.*}} to {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}}
    short3   r0113 = vec009 + sv017; // expected-warning-re {{non-constant-expression is narrowed from type {{.*}} to {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}}
    auto     r0114 = sv018 + vec010; // expected-warning-re {{non-constant-expression is narrowed from type {{.*}} to {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}}
    #ifdef cl_khr_fp16
    auto     r0115 = vec009 + sv019; // expected-warning-re {{non-constant-expression is narrowed from type {{.*}} to {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}}
    short4   r0116 = sv020 + vec010; // expected-warning-re {{non-constant-expression is narrowed from type {{.*}} to {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}}
    #endif // cl_khr_fp16
    auto     r0117 = vec009 + sv021; // expected-warning-re {{non-constant-expression is narrowed from type {{.*}} to {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}}
    auto     r0118 = sv022 + vec010; // expected-warning-re {{non-constant-expression is narrowed from type {{.*}} to {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}}
    #ifdef cl_khr_fp64
    auto     r0119 = vec009 + sv023; // expected-warning-re {{non-constant-expression is narrowed from type {{.*}} to {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}}
    short4   r0120 = sv024 + vec010; // expected-warning-re {{non-constant-expression is narrowed from type {{.*}} to {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}}
    #endif // cl_khr_fp64
    auto     r0121 = vec011 + sv001;
    uint4    r0122 = sv002 + vec012;
    auto     r0123 = vec011 + sv003;
    uint4    r0124 = sv004 + vec012;
    auto     r0125 = vec011 + sv005; // expected-warning-re {{non-constant-expression is narrowed from type {{.*}} to {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}}
    auto     r0126 = sv006 + vec012; // expected-warning-re {{non-constant-expression is narrowed from type {{.*}} to {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}}
    uint8    r0127 = vec011 + sv007;
    auto     r0128 = sv008 + vec012;
    auto     r0129 = vec011 + sv009; // expected-warning-re {{non-constant-expression is narrowed from type {{.*}} to {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}}
    uint4    r0130 = sv010 + vec012; // expected-warning-re {{non-constant-expression is narrowed from type {{.*}} to {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}}
    auto     r0131 = vec011 + sv011;
    auto     r0132 = sv012 + vec012;
    auto     r0133 = vec011 + sv013; // expected-warning-re {{non-constant-expression is narrowed from type {{.*}} to {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}}
    auto     r0134 = sv014 + vec012; // expected-warning-re {{non-constant-expression is narrowed from type {{.*}} to {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}}
    uint8    r0135 = vec011 + sv015; // expected-warning-re {{non-constant-expression is narrowed from type {{.*}} to {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}}
    auto     r0136 = sv016 + vec012; // expected-warning-re {{non-constant-expression is narrowed from type {{.*}} to {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}}
    uint8    r0137 = vec011 + sv017; // expected-warning-re {{non-constant-expression is narrowed from type {{.*}} to {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}}
    auto     r0138 = sv018 + vec012; // expected-warning-re {{non-constant-expression is narrowed from type {{.*}} to {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}}
    #ifdef cl_khr_fp16
    uint8    r0139 = vec011 + sv019; // expected-warning-re {{non-constant-expression is narrowed from type {{.*}} to {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}}
    uint4    r0140 = sv020 + vec012; // expected-warning-re {{non-constant-expression is narrowed from type {{.*}} to {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}}
    #endif // cl_khr_fp16
    uint8    r0141 = vec011 + sv021; // expected-warning-re {{non-constant-expression is narrowed from type {{.*}} to {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}}
    auto     r0142 = sv022 + vec012; // expected-warning-re {{non-constant-expression is narrowed from type {{.*}} to {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}}
    #ifdef cl_khr_fp64
    auto     r0143 = vec011 + sv023; // expected-warning-re {{non-constant-expression is narrowed from type {{.*}} to {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}}
    uint4    r0144 = sv024 + vec012; // expected-warning-re {{non-constant-expression is narrowed from type {{.*}} to {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}}
    #endif // cl_khr_fp64
    auto     r0145 = vec013 + sv001;
    auto     r0146 = sv002 + vec014;
    auto     r0147 = vec013 + sv003;
    auto     r0148 = sv004 + vec014;
    int16    r0149 = vec013 + sv005;
    int8     r0150 = sv006 + vec014;
    auto     r0151 = vec013 + sv007;
    int8     r0152 = sv008 + vec014;
    int16    r0153 = vec013 + sv009;
    int8     r0154 = sv010 + vec014;
    auto     r0155 = vec013 + sv011; // expected-warning-re {{non-constant-expression is narrowed from type {{.*}} to {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}}
    int8     r0156 = sv012 + vec014; // expected-warning-re {{non-constant-expression is narrowed from type {{.*}} to {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}}
    auto     r0157 = vec013 + sv013;
    int8     r0158 = sv014 + vec014;
    int16    r0159 = vec013 + sv015; // expected-warning-re {{non-constant-expression is narrowed from type {{.*}} to {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}}
    int8     r0160 = sv016 + vec014; // expected-warning-re {{non-constant-expression is narrowed from type {{.*}} to {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}}
    int16    r0161 = vec013 + sv017; // expected-warning-re {{non-constant-expression is narrowed from type {{.*}} to {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}}
    int8     r0162 = sv018 + vec014; // expected-warning-re {{non-constant-expression is narrowed from type {{.*}} to {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}}
    #ifdef cl_khr_fp16
    int16    r0163 = vec013 + sv019; // expected-warning-re {{non-constant-expression is narrowed from type {{.*}} to {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}}
    int8     r0164 = sv020 + vec014; // expected-warning-re {{non-constant-expression is narrowed from type {{.*}} to {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}}
    #endif // cl_khr_fp16
    int16    r0165 = vec013 + sv021; // expected-warning-re {{non-constant-expression is narrowed from type {{.*}} to {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}}
    int8     r0166 = sv022 + vec014; // expected-warning-re {{non-constant-expression is narrowed from type {{.*}} to {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}}
    #ifdef cl_khr_fp64
    int16    r0167 = vec013 + sv023; // expected-warning-re {{non-constant-expression is narrowed from type {{.*}} to {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}}
    int8     r0168 = sv024 + vec014; // expected-warning-re {{non-constant-expression is narrowed from type {{.*}} to {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}}
    #endif // cl_khr_fp64
    auto     r0169 = vec015 + sv001;
    ulong8   r0170 = sv002 + vec016;
    auto     r0171 = vec015 + sv003;
    auto     r0172 = sv004 + vec016;
    auto     r0173 = vec015 + sv005; // expected-warning-re {{non-constant-expression is narrowed from type {{.*}} to {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}}
    ulong8   r0174 = sv006 + vec016; // expected-warning-re {{non-constant-expression is narrowed from type {{.*}} to {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}}
    auto     r0175 = vec015 + sv007;
    auto     r0176 = sv008 + vec016;
    ulong4   r0177 = vec015 + sv009; // expected-warning-re {{non-constant-expression is narrowed from type {{.*}} to {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}}
    ulong8   r0178 = sv010 + vec016; // expected-warning-re {{non-constant-expression is narrowed from type {{.*}} to {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}}
    auto     r0179 = vec015 + sv011;
    auto     r0180 = sv012 + vec016;
    auto     r0181 = vec015 + sv013; // expected-warning-re {{non-constant-expression is narrowed from type {{.*}} to {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}}
    ulong8   r0182 = sv014 + vec016; // expected-warning-re {{non-constant-expression is narrowed from type {{.*}} to {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}}
    auto     r0183 = vec015 + sv015;
    auto     r0184 = sv016 + vec016;
    auto     r0185 = vec015 + sv017; // expected-warning-re {{non-constant-expression is narrowed from type {{.*}} to {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}}
    auto     r0186 = sv018 + vec016; // expected-warning-re {{non-constant-expression is narrowed from type {{.*}} to {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}}
    #ifdef cl_khr_fp16
    ulong4   r0187 = vec015 + sv019; // expected-warning-re {{non-constant-expression is narrowed from type {{.*}} to {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}}
    ulong8   r0188 = sv020 + vec016; // expected-warning-re {{non-constant-expression is narrowed from type {{.*}} to {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}}
    #endif // cl_khr_fp16
    auto     r0189 = vec015 + sv021; // expected-warning-re {{non-constant-expression is narrowed from type {{.*}} to {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}}
    auto     r0190 = sv022 + vec016; // expected-warning-re {{non-constant-expression is narrowed from type {{.*}} to {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}}
    #ifdef cl_khr_fp64
    auto     r0191 = vec015 + sv023; // expected-warning-re {{non-constant-expression is narrowed from type {{.*}} to {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}}
    auto     r0192 = sv024 + vec016; // expected-warning-re {{non-constant-expression is narrowed from type {{.*}} to {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}}
    #endif // cl_khr_fp64
    long2    r0193 = vec017 + sv001;
    long4    r0194 = sv002 + vec018;
    auto     r0195 = vec017 + sv003;
    auto     r0196 = sv004 + vec018;
    long2    r0197 = vec017 + sv005;
    auto     r0198 = sv006 + vec018;
    auto     r0199 = vec017 + sv007;
    auto     r0200 = sv008 + vec018;
    long2    r0201 = vec017 + sv009;
    auto     r0202 = sv010 + vec018;
    long2    r0203 = vec017 + sv011;
    long4    r0204 = sv012 + vec018;
    long2    r0205 = vec017 + sv013;
    long4    r0206 = sv014 + vec018;
    long2    r0207 = vec017 + sv015; // expected-warning-re {{non-constant-expression is narrowed from type {{.*}} to {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}}
    long4    r0208 = sv016 + vec018; // expected-warning-re {{non-constant-expression is narrowed from type {{.*}} to {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}}
    long2    r0209 = vec017 + sv017;
    auto     r0210 = sv018 + vec018;
    #ifdef cl_khr_fp16
    auto     r0211 = vec017 + sv019; // expected-warning-re {{non-constant-expression is narrowed from type {{.*}} to {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}}
    auto     r0212 = sv020 + vec018; // expected-warning-re {{non-constant-expression is narrowed from type {{.*}} to {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}}
    #endif // cl_khr_fp16
    long2    r0213 = vec017 + sv021; // expected-warning-re {{non-constant-expression is narrowed from type {{.*}} to {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}}
    auto     r0214 = sv022 + vec018; // expected-warning-re {{non-constant-expression is narrowed from type {{.*}} to {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}}
    #ifdef cl_khr_fp64
    auto     r0215 = vec017 + sv023; // expected-warning-re {{non-constant-expression is narrowed from type {{.*}} to {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}}
    long4    r0216 = sv024 + vec018; // expected-warning-re {{non-constant-expression is narrowed from type {{.*}} to {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}}
    #endif // cl_khr_fp64
    #ifdef cl_khr_fp16
    half4    r0217 = vec019 + sv001;
    auto     r0218 = sv002 + vec020;
    half4    r0219 = vec019 + sv003;
    auto     r0220 = sv004 + vec020;
    half4    r0221 = vec019 + sv005;
    half4    r0222 = sv006 + vec020;
    auto     r0223 = vec019 + sv007; // expected-warning-re {{non-constant-expression is narrowed from type {{.*}} to {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}}
    auto     r0224 = sv008 + vec020; // expected-warning-re {{non-constant-expression is narrowed from type {{.*}} to {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}}
    half4    r0225 = vec019 + sv009; // expected-warning-re {{non-constant-expression is narrowed from type {{.*}} to {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}}
    half4    r0226 = sv010 + vec020; // expected-warning-re {{non-constant-expression is narrowed from type {{.*}} to {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}}
    auto     r0227 = vec019 + sv011; // expected-warning-re {{non-constant-expression is narrowed from type {{.*}} to {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}}
    half4    r0228 = sv012 + vec020; // expected-warning-re {{non-constant-expression is narrowed from type {{.*}} to {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}}
    half4    r0229 = vec019 + sv013; // expected-warning-re {{non-constant-expression is narrowed from type {{.*}} to {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}}
    auto     r0230 = sv014 + vec020; // expected-warning-re {{non-constant-expression is narrowed from type {{.*}} to {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}}
    half4    r0231 = vec019 + sv015; // expected-warning-re {{non-constant-expression is narrowed from type {{.*}} to {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}}
    auto     r0232 = sv016 + vec020; // expected-warning-re {{non-constant-expression is narrowed from type {{.*}} to {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}}
    half4    r0233 = vec019 + sv017; // expected-warning-re {{non-constant-expression is narrowed from type {{.*}} to {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}}
    auto     r0234 = sv018 + vec020; // expected-warning-re {{non-constant-expression is narrowed from type {{.*}} to {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}}
    half4    r0235 = vec019 + sv019;
    half4    r0236 = sv020 + vec020;
    auto     r0237 = vec019 + sv021; // expected-warning-re {{non-constant-expression is narrowed from type {{.*}} to {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}}
    auto     r0238 = sv022 + vec020; // expected-warning-re {{non-constant-expression is narrowed from type {{.*}} to {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}}
    #endif // cl_khr_fp16
    #ifdef cl_khr_fp64
    #ifdef cl_khr_fp16
    auto     r0239 = vec019 + sv023; // expected-warning-re {{non-constant-expression is narrowed from type {{.*}} to {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}}
    half4    r0240 = sv024 + vec020; // expected-warning-re {{non-constant-expression is narrowed from type {{.*}} to {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}}
    #endif // cl_khr_fp16
    #endif // cl_khr_fp64
    auto     r0241 = vec021 + sv001;
    float4   r0242 = sv002 + vec022;
    auto     r0243 = vec021 + sv003;
    float4   r0244 = sv004 + vec022;
    float4   r0245 = vec021 + sv005;
    float4   r0246 = sv006 + vec022;
    auto     r0247 = vec021 + sv007;
    auto     r0248 = sv008 + vec022;
    float4   r0249 = vec021 + sv009;
    float4   r0250 = sv010 + vec022;
    float4   r0251 = vec021 + sv011; // expected-warning-re {{non-constant-expression is narrowed from type {{.*}} to {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}}
    auto     r0252 = sv012 + vec022; // expected-warning-re {{non-constant-expression is narrowed from type {{.*}} to {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}}
    float4   r0253 = vec021 + sv013; // expected-warning-re {{non-constant-expression is narrowed from type {{.*}} to {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}}
    float4   r0254 = sv014 + vec022; // expected-warning-re {{non-constant-expression is narrowed from type {{.*}} to {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}}
    float4   r0255 = vec021 + sv015; // expected-warning-re {{non-constant-expression is narrowed from type {{.*}} to {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}}
    float4   r0256 = sv016 + vec022; // expected-warning-re {{non-constant-expression is narrowed from type {{.*}} to {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}}
    float4   r0257 = vec021 + sv017; // expected-warning-re {{non-constant-expression is narrowed from type {{.*}} to {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}}
    float4   r0258 = sv018 + vec022; // expected-warning-re {{non-constant-expression is narrowed from type {{.*}} to {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}}
    #ifdef cl_khr_fp16
    float4   r0259 = vec021 + sv019;
    auto     r0260 = sv020 + vec022;
    #endif // cl_khr_fp16
    auto     r0261 = vec021 + sv021;
    float4   r0262 = sv022 + vec022;
    #ifdef cl_khr_fp64
    auto     r0263 = vec021 + sv023; // expected-warning-re {{non-constant-expression is narrowed from type {{.*}} to {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}}
    float4   r0264 = sv024 + vec022; // expected-warning-re {{non-constant-expression is narrowed from type {{.*}} to {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}}
    auto     r0265 = vec023 + sv001;
    double2  r0266 = sv002 + vec024;
    auto     r0267 = vec023 + sv003;
    auto     r0268 = sv004 + vec024;
    auto     r0269 = vec023 + sv005;
    auto     r0270 = sv006 + vec024;
    auto     r0271 = vec023 + sv007;
    double2  r0272 = sv008 + vec024;
    auto     r0273 = vec023 + sv009;
    double2  r0274 = sv010 + vec024;
    double4  r0275 = vec023 + sv011;
    auto     r0276 = sv012 + vec024;
    auto     r0277 = vec023 + sv013;
    double2  r0278 = sv014 + vec024;
    auto     r0279 = vec023 + sv015; // expected-warning-re {{non-constant-expression is narrowed from type {{.*}} to {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}}
    auto     r0280 = sv016 + vec024; // expected-warning-re {{non-constant-expression is narrowed from type {{.*}} to {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}}
    auto     r0281 = vec023 + sv017; // expected-warning-re {{non-constant-expression is narrowed from type {{.*}} to {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}}
    double2  r0282 = sv018 + vec024; // expected-warning-re {{non-constant-expression is narrowed from type {{.*}} to {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}}
    #ifdef cl_khr_fp16
    double4  r0283 = vec023 + sv019;
    double2  r0284 = sv020 + vec024;
    #endif // cl_khr_fp16
    auto     r0285 = vec023 + sv021;
    auto     r0286 = sv022 + vec024;
    double4  r0287 = vec023 + sv023;
    auto     r0288 = sv024 + vec024;
    #endif // cl_khr_fp64

    // Scalar to vector conversion (literals).
    // bool16   r0289 = vec001 + true;
    // bool4    r0290 = true + vec002;
    // auto     r0291 = vec001 + false;
    // auto     r0292 = false + vec002;
    // auto     r0293 = vec001 + '\0';
    // bool4    r0294 = '\0' + vec002;
    // auto     r0295 = vec001 + 'A';
    // auto     r0296 = 'A' + vec002;
    // auto     r0297 = vec001 + static_cast<char>(-12);
    // bool4    r0298 = static_cast<char>(-12) + vec002;
    // bool16   r0299 = vec001 + static_cast<uchar>('A');
    // bool4    r0300 = static_cast<uchar>('A') + vec002;
    // auto     r0301 = vec001 + static_cast<uchar>(145);
    // auto     r0302 = static_cast<uchar>(145) + vec002;
    // auto     r0303 = vec001 + static_cast<short>(145);
    // auto     r0304 = static_cast<short>(145) + vec002;
    // bool16   r0305 = vec001 + static_cast<short>(14501);
    // bool4    r0306 = static_cast<short>(14501) + vec002;
    // auto     r0307 = vec001 + static_cast<short>(-17501);
    // bool4    r0308 = static_cast<short>(-17501) + vec002;
    // bool16   r0309 = vec001 + static_cast<ushort>(34501);
    // auto     r0310 = static_cast<ushort>(34501) + vec002;
    // bool16   r0311 = vec001 + 1;
    // auto     r0312 = 1 + vec002;
    // bool16   r0313 = vec001 + 10;
    // auto     r0314 = 10 + vec002;
    // bool16   r0315 = vec001 + -10;
    // auto     r0316 = -10 + vec002;
    // bool16   r0317 = vec001 + 100001;
    // bool4    r0318 = 100001 + vec002;
    // auto     r0319 = vec001 + -100001;
    // bool4    r0320 = -100001 + vec002;
    // bool16   r0321 = vec001 + 100000001;
    // bool4    r0322 = 100000001 + vec002;
    // auto     r0323 = vec001 + -100000001;
    // auto     r0324 = -100000001 + vec002;
    // bool16   r0325 = vec001 + 100000000001;
    // auto     r0326 = 100000000001 + vec002;
    // bool16   r0327 = vec001 + -100000000001;
    // auto     r0328 = -100000000001 + vec002;
    // bool16   r0329 = vec001 + 100000000001UL;
    // bool4    r0330 = 100000000001UL + vec002;
    // auto     r0331 = vec001 + -100000000001L;
    // bool4    r0332 = -100000000001L + vec002;
    #ifdef cl_khr_fp16
    // auto     r0333 = vec001 + static_cast<half>(1.0f);
    // auto     r0334 = static_cast<half>(1.0f) + vec002;
    // auto     r0335 = vec001 + static_cast<half>(12.0f);
    // bool4    r0336 = static_cast<half>(12.0f) + vec002;
    // bool16   r0337 = vec001 + static_cast<half>(-12.0f);
    // auto     r0338 = static_cast<half>(-12.0f) + vec002;
    // auto     r0339 = vec001 + static_cast<half>(12.25f);
    // bool4    r0340 = static_cast<half>(12.25f) + vec002;
    // bool16   r0341 = vec001 + static_cast<half>(-12.25f);
    // auto     r0342 = static_cast<half>(-12.25f) + vec002;
    #endif // cl_khr_fp16
    // auto     r0343 = vec001 + 1.0f;
    // auto     r0344 = 1.0f + vec002;
    // bool16   r0345 = vec001 + 12.0f;
    // bool4    r0346 = 12.0f + vec002;
    // bool16   r0347 = vec001 + -12.0f;
    // auto     r0348 = -12.0f + vec002;
    // bool16   r0349 = vec001 + 12.25f;
    // bool4    r0350 = 12.25f + vec002;
    // auto     r0351 = vec001 + -12.25f;
    // bool4    r0352 = -12.25f + vec002;
    // bool16   r0353 = vec001 + 123456.f;
    // bool4    r0354 = 123456.f + vec002;
    // auto     r0355 = vec001 + 123456.25f;
    // auto     r0356 = 123456.25f + vec002;
    #ifdef cl_khr_fp64
    // auto     r0357 = vec001 + 1.0;
    // bool4    r0358 = 1.0 + vec002;
    // bool16   r0359 = vec001 + 12.0;
    // bool4    r0360 = 12.0 + vec002;
    // bool16   r0361 = vec001 + -12.0;
    // bool4    r0362 = -12.0 + vec002;
    // bool16   r0363 = vec001 + 12.25;
    // auto     r0364 = 12.25 + vec002;
    // auto     r0365 = vec001 + -12.25;
    // auto     r0366 = -12.25 + vec002;
    // bool16   r0367 = vec001 + 123456.;
    // bool4    r0368 = 123456. + vec002;
    // auto     r0369 = vec001 + 123456.25;
    // auto     r0370 = 123456.25 + vec002;
    // bool16   r0371 = vec001 + -123456789.;
    // bool4    r0372 = -123456789. + vec002;
    // bool16   r0373 = vec001 + -123456789.25;
    // auto     r0374 = -123456789.25 + vec002;
    // auto     r0375 = vec001 + -123456789.25e40;
    // auto     r0376 = -123456789.25e40 + vec002;
    #endif // cl_khr_fp64
    uchar16  r0377 = vec003 + true;
    auto     r0378 = true + vec004;
    auto     r0379 = vec003 + false;
    auto     r0380 = false + vec004;
    auto     r0381 = vec003 + '\0';
    auto     r0382 = '\0' + vec004;
    auto     r0383 = vec003 + 'A';
    uchar2   r0384 = 'A' + vec004;
    uchar16  r0385 = vec003 + static_cast<char>(-12); // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    uchar2   r0386 = static_cast<char>(-12) + vec004; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    uchar16  r0387 = vec003 + static_cast<uchar>('A');
    auto     r0388 = static_cast<uchar>('A') + vec004;
    uchar16  r0389 = vec003 + static_cast<uchar>(145);
    uchar2   r0390 = static_cast<uchar>(145) + vec004;
    uchar16  r0391 = vec003 + static_cast<short>(145);
    uchar2   r0392 = static_cast<short>(145) + vec004;
    uchar16  r0393 = vec003 + static_cast<short>(14501); // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    auto     r0394 = static_cast<short>(14501) + vec004; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    uchar16  r0395 = vec003 + static_cast<short>(-17501); // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    uchar2   r0396 = static_cast<short>(-17501) + vec004; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    uchar16  r0397 = vec003 + static_cast<ushort>(34501); // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    auto     r0398 = static_cast<ushort>(34501) + vec004; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    uchar16  r0399 = vec003 + 1;
    auto     r0400 = 1 + vec004;
    auto     r0401 = vec003 + 10;
    uchar2   r0402 = 10 + vec004;
    auto     r0403 = vec003 + -10; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    auto     r0404 = -10 + vec004; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    uchar16  r0405 = vec003 + 100001; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    auto     r0406 = 100001 + vec004; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    uchar16  r0407 = vec003 + -100001; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    auto     r0408 = -100001 + vec004; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    auto     r0409 = vec003 + 100000001; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    auto     r0410 = 100000001 + vec004; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    auto     r0411 = vec003 + -100000001; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    uchar2   r0412 = -100000001 + vec004; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    uchar16  r0413 = vec003 + 100000000001; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    uchar2   r0414 = 100000000001 + vec004; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    uchar16  r0415 = vec003 + -100000000001; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    auto     r0416 = -100000000001 + vec004; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    uchar16  r0417 = vec003 + 100000000001UL; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    auto     r0418 = 100000000001UL + vec004; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    auto     r0419 = vec003 + -100000000001L; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    auto     r0420 = -100000000001L + vec004; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    #ifdef cl_khr_fp16
    auto     r0421 = vec003 + static_cast<half>(1.0f);
    auto     r0422 = static_cast<half>(1.0f) + vec004;
    uchar16  r0423 = vec003 + static_cast<half>(12.0f);
    auto     r0424 = static_cast<half>(12.0f) + vec004;
    uchar16  r0425 = vec003 + static_cast<half>(-12.0f); // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    uchar2   r0426 = static_cast<half>(-12.0f) + vec004; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    uchar16  r0427 = vec003 + static_cast<half>(12.25f); // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    auto     r0428 = static_cast<half>(12.25f) + vec004; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    uchar16  r0429 = vec003 + static_cast<half>(-12.25f); // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    auto     r0430 = static_cast<half>(-12.25f) + vec004; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    #endif // cl_khr_fp16
    auto     r0431 = vec003 + 1.0f;
    auto     r0432 = 1.0f + vec004;
    uchar16  r0433 = vec003 + 12.0f;
    auto     r0434 = 12.0f + vec004;
    auto     r0435 = vec003 + -12.0f; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    auto     r0436 = -12.0f + vec004; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    uchar16  r0437 = vec003 + 12.25f; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    auto     r0438 = 12.25f + vec004; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    uchar16  r0439 = vec003 + -12.25f; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    auto     r0440 = -12.25f + vec004; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    uchar16  r0441 = vec003 + 123456.f; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    auto     r0442 = 123456.f + vec004; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    auto     r0443 = vec003 + 123456.25f; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    uchar2   r0444 = 123456.25f + vec004; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    #ifdef cl_khr_fp64
    uchar16  r0445 = vec003 + 1.0;
    uchar2   r0446 = 1.0 + vec004;
    uchar16  r0447 = vec003 + 12.0;
    auto     r0448 = 12.0 + vec004;
    auto     r0449 = vec003 + -12.0; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    uchar2   r0450 = -12.0 + vec004; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    uchar16  r0451 = vec003 + 12.25; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    auto     r0452 = 12.25 + vec004; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    auto     r0453 = vec003 + -12.25; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    auto     r0454 = -12.25 + vec004; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    auto     r0455 = vec003 + 123456.; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    uchar2   r0456 = 123456. + vec004; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    uchar16  r0457 = vec003 + 123456.25; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    auto     r0458 = 123456.25 + vec004; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    auto     r0459 = vec003 + -123456789.; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    auto     r0460 = -123456789. + vec004; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    auto     r0461 = vec003 + -123456789.25; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    auto     r0462 = -123456789.25 + vec004; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    auto     r0463 = vec003 + -123456789.25e40; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    uchar2   r0464 = -123456789.25e40 + vec004; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    #endif // cl_khr_fp64
    char8    r0465 = vec005 + true;
    auto     r0466 = true + vec006;
    auto     r0467 = vec005 + false;
    auto     r0468 = false + vec006;
    char8    r0469 = vec005 + '\0';
    char16   r0470 = '\0' + vec006;
    auto     r0471 = vec005 + 'A';
    auto     r0472 = 'A' + vec006;
    char8    r0473 = vec005 + static_cast<char>(-12);
    char16   r0474 = static_cast<char>(-12) + vec006;
    auto     r0475 = vec005 + static_cast<uchar>('A');
    auto     r0476 = static_cast<uchar>('A') + vec006;
    char8    r0477 = vec005 + static_cast<uchar>(145); // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    auto     r0478 = static_cast<uchar>(145) + vec006; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    auto     r0479 = vec005 + static_cast<short>(145); // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    auto     r0480 = static_cast<short>(145) + vec006; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    auto     r0481 = vec005 + static_cast<short>(14501); // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    auto     r0482 = static_cast<short>(14501) + vec006; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    char8    r0483 = vec005 + static_cast<short>(-17501); // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    char16   r0484 = static_cast<short>(-17501) + vec006; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    auto     r0485 = vec005 + static_cast<ushort>(34501); // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    char16   r0486 = static_cast<ushort>(34501) + vec006; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    auto     r0487 = vec005 + 1;
    char16   r0488 = 1 + vec006;
    auto     r0489 = vec005 + 10;
    auto     r0490 = 10 + vec006;
    auto     r0491 = vec005 + -10;
    char16   r0492 = -10 + vec006;
    auto     r0493 = vec005 + 100001; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    char16   r0494 = 100001 + vec006; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    auto     r0495 = vec005 + -100001; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    auto     r0496 = -100001 + vec006; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    auto     r0497 = vec005 + 100000001; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    auto     r0498 = 100000001 + vec006; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    char8    r0499 = vec005 + -100000001; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    auto     r0500 = -100000001 + vec006; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    char8    r0501 = vec005 + 100000000001; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    char16   r0502 = 100000000001 + vec006; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    char8    r0503 = vec005 + -100000000001; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    auto     r0504 = -100000000001 + vec006; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    char8    r0505 = vec005 + 100000000001UL; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    auto     r0506 = 100000000001UL + vec006; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    char8    r0507 = vec005 + -100000000001L; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    auto     r0508 = -100000000001L + vec006; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    #ifdef cl_khr_fp16
    auto     r0509 = vec005 + static_cast<half>(1.0f);
    auto     r0510 = static_cast<half>(1.0f) + vec006;
    auto     r0511 = vec005 + static_cast<half>(12.0f);
    auto     r0512 = static_cast<half>(12.0f) + vec006;
    char8    r0513 = vec005 + static_cast<half>(-12.0f);
    auto     r0514 = static_cast<half>(-12.0f) + vec006;
    char8    r0515 = vec005 + static_cast<half>(12.25f); // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    auto     r0516 = static_cast<half>(12.25f) + vec006; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    auto     r0517 = vec005 + static_cast<half>(-12.25f); // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    auto     r0518 = static_cast<half>(-12.25f) + vec006; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    #endif // cl_khr_fp16
    auto     r0519 = vec005 + 1.0f;
    char16   r0520 = 1.0f + vec006;
    auto     r0521 = vec005 + 12.0f;
    auto     r0522 = 12.0f + vec006;
    char8    r0523 = vec005 + -12.0f;
    auto     r0524 = -12.0f + vec006;
    auto     r0525 = vec005 + 12.25f; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    char16   r0526 = 12.25f + vec006; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    auto     r0527 = vec005 + -12.25f; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    auto     r0528 = -12.25f + vec006; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    auto     r0529 = vec005 + 123456.f; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    char16   r0530 = 123456.f + vec006; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    auto     r0531 = vec005 + 123456.25f; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    char16   r0532 = 123456.25f + vec006; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    #ifdef cl_khr_fp64
    char8    r0533 = vec005 + 1.0;
    auto     r0534 = 1.0 + vec006;
    auto     r0535 = vec005 + 12.0;
    auto     r0536 = 12.0 + vec006;
    char8    r0537 = vec005 + -12.0;
    char16   r0538 = -12.0 + vec006;
    char8    r0539 = vec005 + 12.25; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    char16   r0540 = 12.25 + vec006; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    char8    r0541 = vec005 + -12.25; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    auto     r0542 = -12.25 + vec006; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    auto     r0543 = vec005 + 123456.; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    char16   r0544 = 123456. + vec006; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    char8    r0545 = vec005 + 123456.25; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    char16   r0546 = 123456.25 + vec006; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    char8    r0547 = vec005 + -123456789.; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    auto     r0548 = -123456789. + vec006; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    char8    r0549 = vec005 + -123456789.25; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    char16   r0550 = -123456789.25 + vec006; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    char8    r0551 = vec005 + -123456789.25e40; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    char16   r0552 = -123456789.25e40 + vec006; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    #endif // cl_khr_fp64
    ushort16 r0553 = vec007 + true;
    ushort8  r0554 = true + vec008;
    ushort16 r0555 = vec007 + false;
    ushort8  r0556 = false + vec008;
    auto     r0557 = vec007 + '\0';
    ushort8  r0558 = '\0' + vec008;
    ushort16 r0559 = vec007 + 'A';
    ushort8  r0560 = 'A' + vec008;
    ushort16 r0561 = vec007 + static_cast<char>(-12); // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    ushort8  r0562 = static_cast<char>(-12) + vec008; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    auto     r0563 = vec007 + static_cast<uchar>('A');
    ushort8  r0564 = static_cast<uchar>('A') + vec008;
    ushort16 r0565 = vec007 + static_cast<uchar>(145);
    auto     r0566 = static_cast<uchar>(145) + vec008;
    auto     r0567 = vec007 + static_cast<short>(145);
    ushort8  r0568 = static_cast<short>(145) + vec008;
    auto     r0569 = vec007 + static_cast<short>(14501);
    ushort8  r0570 = static_cast<short>(14501) + vec008;
    auto     r0571 = vec007 + static_cast<short>(-17501); // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    ushort8  r0572 = static_cast<short>(-17501) + vec008; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    auto     r0573 = vec007 + static_cast<ushort>(34501);
    auto     r0574 = static_cast<ushort>(34501) + vec008;
    auto     r0575 = vec007 + 1;
    auto     r0576 = 1 + vec008;
    auto     r0577 = vec007 + 10;
    ushort8  r0578 = 10 + vec008;
    ushort16 r0579 = vec007 + -10; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    ushort8  r0580 = -10 + vec008; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    ushort16 r0581 = vec007 + 100001; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    ushort8  r0582 = 100001 + vec008; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    ushort16 r0583 = vec007 + -100001; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    ushort8  r0584 = -100001 + vec008; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    auto     r0585 = vec007 + 100000001; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    auto     r0586 = 100000001 + vec008; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    ushort16 r0587 = vec007 + -100000001; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    ushort8  r0588 = -100000001 + vec008; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    ushort16 r0589 = vec007 + 100000000001; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    ushort8  r0590 = 100000000001 + vec008; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    ushort16 r0591 = vec007 + -100000000001; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    ushort8  r0592 = -100000000001 + vec008; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    ushort16 r0593 = vec007 + 100000000001UL; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    auto     r0594 = 100000000001UL + vec008; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    ushort16 r0595 = vec007 + -100000000001L; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    ushort8  r0596 = -100000000001L + vec008; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    #ifdef cl_khr_fp16
    auto     r0597 = vec007 + static_cast<half>(1.0f);
    ushort8  r0598 = static_cast<half>(1.0f) + vec008;
    ushort16 r0599 = vec007 + static_cast<half>(12.0f);
    ushort8  r0600 = static_cast<half>(12.0f) + vec008;
    auto     r0601 = vec007 + static_cast<half>(-12.0f); // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    auto     r0602 = static_cast<half>(-12.0f) + vec008; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    auto     r0603 = vec007 + static_cast<half>(12.25f); // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    auto     r0604 = static_cast<half>(12.25f) + vec008; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    auto     r0605 = vec007 + static_cast<half>(-12.25f); // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    ushort8  r0606 = static_cast<half>(-12.25f) + vec008; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    #endif // cl_khr_fp16
    ushort16 r0607 = vec007 + 1.0f;
    auto     r0608 = 1.0f + vec008;
    ushort16 r0609 = vec007 + 12.0f;
    auto     r0610 = 12.0f + vec008;
    auto     r0611 = vec007 + -12.0f; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    auto     r0612 = -12.0f + vec008; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    ushort16 r0613 = vec007 + 12.25f; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    ushort8  r0614 = 12.25f + vec008; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    auto     r0615 = vec007 + -12.25f; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    auto     r0616 = -12.25f + vec008; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    ushort16 r0617 = vec007 + 123456.f; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    auto     r0618 = 123456.f + vec008; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    ushort16 r0619 = vec007 + 123456.25f; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    auto     r0620 = 123456.25f + vec008; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    #ifdef cl_khr_fp64
    auto     r0621 = vec007 + 1.0;
    ushort8  r0622 = 1.0 + vec008;
    ushort16 r0623 = vec007 + 12.0;
    ushort8  r0624 = 12.0 + vec008;
    ushort16 r0625 = vec007 + -12.0; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    ushort8  r0626 = -12.0 + vec008; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    ushort16 r0627 = vec007 + 12.25; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    ushort8  r0628 = 12.25 + vec008; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    auto     r0629 = vec007 + -12.25; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    ushort8  r0630 = -12.25 + vec008; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    auto     r0631 = vec007 + 123456.; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    auto     r0632 = 123456. + vec008; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    ushort16 r0633 = vec007 + 123456.25; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    ushort8  r0634 = 123456.25 + vec008; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    ushort16 r0635 = vec007 + -123456789.; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    ushort8  r0636 = -123456789. + vec008; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    ushort16 r0637 = vec007 + -123456789.25; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    auto     r0638 = -123456789.25 + vec008; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    ushort16 r0639 = vec007 + -123456789.25e40; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    auto     r0640 = -123456789.25e40 + vec008; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    #endif // cl_khr_fp64
    short3   r0641 = vec009 + true;
    short4   r0642 = true + vec010;
    auto     r0643 = vec009 + false;
    short4   r0644 = false + vec010;
    short3   r0645 = vec009 + '\0';
    auto     r0646 = '\0' + vec010;
    auto     r0647 = vec009 + 'A';
    short4   r0648 = 'A' + vec010;
    short3   r0649 = vec009 + static_cast<char>(-12);
    auto     r0650 = static_cast<char>(-12) + vec010;
    auto     r0651 = vec009 + static_cast<uchar>('A');
    short4   r0652 = static_cast<uchar>('A') + vec010;
    auto     r0653 = vec009 + static_cast<uchar>(145);
    short4   r0654 = static_cast<uchar>(145) + vec010;
    auto     r0655 = vec009 + static_cast<short>(145);
    short4   r0656 = static_cast<short>(145) + vec010;
    auto     r0657 = vec009 + static_cast<short>(14501);
    auto     r0658 = static_cast<short>(14501) + vec010;
    short3   r0659 = vec009 + static_cast<short>(-17501);
    auto     r0660 = static_cast<short>(-17501) + vec010;
    short3   r0661 = vec009 + static_cast<ushort>(34501); // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    auto     r0662 = static_cast<ushort>(34501) + vec010; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    short3   r0663 = vec009 + 1;
    short4   r0664 = 1 + vec010;
    auto     r0665 = vec009 + 10;
    short4   r0666 = 10 + vec010;
    short3   r0667 = vec009 + -10;
    auto     r0668 = -10 + vec010;
    short3   r0669 = vec009 + 100001; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    auto     r0670 = 100001 + vec010; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    auto     r0671 = vec009 + -100001; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    short4   r0672 = -100001 + vec010; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    short3   r0673 = vec009 + 100000001; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    auto     r0674 = 100000001 + vec010; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    auto     r0675 = vec009 + -100000001; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    auto     r0676 = -100000001 + vec010; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    short3   r0677 = vec009 + 100000000001; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    short4   r0678 = 100000000001 + vec010; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    short3   r0679 = vec009 + -100000000001; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    short4   r0680 = -100000000001 + vec010; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    short3   r0681 = vec009 + 100000000001UL; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    short4   r0682 = 100000000001UL + vec010; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    auto     r0683 = vec009 + -100000000001L; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    auto     r0684 = -100000000001L + vec010; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    #ifdef cl_khr_fp16
    short3   r0685 = vec009 + static_cast<half>(1.0f);
    short4   r0686 = static_cast<half>(1.0f) + vec010;
    auto     r0687 = vec009 + static_cast<half>(12.0f);
    auto     r0688 = static_cast<half>(12.0f) + vec010;
    short3   r0689 = vec009 + static_cast<half>(-12.0f);
    auto     r0690 = static_cast<half>(-12.0f) + vec010;
    auto     r0691 = vec009 + static_cast<half>(12.25f); // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    short4   r0692 = static_cast<half>(12.25f) + vec010; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    auto     r0693 = vec009 + static_cast<half>(-12.25f); // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    short4   r0694 = static_cast<half>(-12.25f) + vec010; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    #endif // cl_khr_fp16
    short3   r0695 = vec009 + 1.0f;
    auto     r0696 = 1.0f + vec010;
    short3   r0697 = vec009 + 12.0f;
    auto     r0698 = 12.0f + vec010;
    auto     r0699 = vec009 + -12.0f;
    short4   r0700 = -12.0f + vec010;
    short3   r0701 = vec009 + 12.25f; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    short4   r0702 = 12.25f + vec010; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    auto     r0703 = vec009 + -12.25f; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    auto     r0704 = -12.25f + vec010; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    short3   r0705 = vec009 + 123456.f; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    auto     r0706 = 123456.f + vec010; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    auto     r0707 = vec009 + 123456.25f; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    auto     r0708 = 123456.25f + vec010; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    #ifdef cl_khr_fp64
    auto     r0709 = vec009 + 1.0;
    auto     r0710 = 1.0 + vec010;
    auto     r0711 = vec009 + 12.0;
    short4   r0712 = 12.0 + vec010;
    short3   r0713 = vec009 + -12.0;
    auto     r0714 = -12.0 + vec010;
    auto     r0715 = vec009 + 12.25; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    short4   r0716 = 12.25 + vec010; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    short3   r0717 = vec009 + -12.25; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    auto     r0718 = -12.25 + vec010; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    auto     r0719 = vec009 + 123456.; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    auto     r0720 = 123456. + vec010; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    auto     r0721 = vec009 + 123456.25; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    auto     r0722 = 123456.25 + vec010; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    short3   r0723 = vec009 + -123456789.; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    auto     r0724 = -123456789. + vec010; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    short3   r0725 = vec009 + -123456789.25; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    auto     r0726 = -123456789.25 + vec010; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    auto     r0727 = vec009 + -123456789.25e40; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    short4   r0728 = -123456789.25e40 + vec010; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    #endif // cl_khr_fp64
    uint8    r0729 = vec011 + true;
    uint4    r0730 = true + vec012;
    uint8    r0731 = vec011 + false;
    uint4    r0732 = false + vec012;
    uint8    r0733 = vec011 + '\0';
    auto     r0734 = '\0' + vec012;
    auto     r0735 = vec011 + 'A';
    uint4    r0736 = 'A' + vec012;
    uint8    r0737 = vec011 + static_cast<char>(-12); // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    uint4    r0738 = static_cast<char>(-12) + vec012; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    auto     r0739 = vec011 + static_cast<uchar>('A');
    uint4    r0740 = static_cast<uchar>('A') + vec012;
    uint8    r0741 = vec011 + static_cast<uchar>(145);
    auto     r0742 = static_cast<uchar>(145) + vec012;
    uint8    r0743 = vec011 + static_cast<short>(145);
    uint4    r0744 = static_cast<short>(145) + vec012;
    auto     r0745 = vec011 + static_cast<short>(14501);
    uint4    r0746 = static_cast<short>(14501) + vec012;
    auto     r0747 = vec011 + static_cast<short>(-17501); // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    auto     r0748 = static_cast<short>(-17501) + vec012; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    auto     r0749 = vec011 + static_cast<ushort>(34501);
    auto     r0750 = static_cast<ushort>(34501) + vec012;
    uint8    r0751 = vec011 + 1;
    uint4    r0752 = 1 + vec012;
    uint8    r0753 = vec011 + 10;
    uint4    r0754 = 10 + vec012;
    uint8    r0755 = vec011 + -10; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    auto     r0756 = -10 + vec012; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    uint8    r0757 = vec011 + 100001;
    auto     r0758 = 100001 + vec012;
    uint8    r0759 = vec011 + -100001; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    auto     r0760 = -100001 + vec012; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    uint8    r0761 = vec011 + 100000001;
    auto     r0762 = 100000001 + vec012;
    uint8    r0763 = vec011 + -100000001; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    auto     r0764 = -100000001 + vec012; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    auto     r0765 = vec011 + 100000000001; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    uint4    r0766 = 100000000001 + vec012; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    auto     r0767 = vec011 + -100000000001; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    uint4    r0768 = -100000000001 + vec012; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    uint8    r0769 = vec011 + 100000000001UL; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    uint4    r0770 = 100000000001UL + vec012; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    uint8    r0771 = vec011 + -100000000001L; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    auto     r0772 = -100000000001L + vec012; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    #ifdef cl_khr_fp16
    uint8    r0773 = vec011 + static_cast<half>(1.0f);
    uint4    r0774 = static_cast<half>(1.0f) + vec012;
    auto     r0775 = vec011 + static_cast<half>(12.0f);
    uint4    r0776 = static_cast<half>(12.0f) + vec012;
    uint8    r0777 = vec011 + static_cast<half>(-12.0f); // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    auto     r0778 = static_cast<half>(-12.0f) + vec012; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    uint8    r0779 = vec011 + static_cast<half>(12.25f); // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    auto     r0780 = static_cast<half>(12.25f) + vec012; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    uint8    r0781 = vec011 + static_cast<half>(-12.25f); // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    uint4    r0782 = static_cast<half>(-12.25f) + vec012; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    #endif // cl_khr_fp16
    auto     r0783 = vec011 + 1.0f;
    auto     r0784 = 1.0f + vec012;
    uint8    r0785 = vec011 + 12.0f;
    auto     r0786 = 12.0f + vec012;
    uint8    r0787 = vec011 + -12.0f; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    auto     r0788 = -12.0f + vec012; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    uint8    r0789 = vec011 + 12.25f; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    uint4    r0790 = 12.25f + vec012; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    auto     r0791 = vec011 + -12.25f; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    uint4    r0792 = -12.25f + vec012; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    auto     r0793 = vec011 + 123456.f;
    auto     r0794 = 123456.f + vec012;
    uint8    r0795 = vec011 + 123456.25f; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    auto     r0796 = 123456.25f + vec012; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    #ifdef cl_khr_fp64
    auto     r0797 = vec011 + 1.0;
    uint4    r0798 = 1.0 + vec012;
    auto     r0799 = vec011 + 12.0;
    auto     r0800 = 12.0 + vec012;
    uint8    r0801 = vec011 + -12.0; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    auto     r0802 = -12.0 + vec012; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    uint8    r0803 = vec011 + 12.25; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    auto     r0804 = 12.25 + vec012; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    auto     r0805 = vec011 + -12.25; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    auto     r0806 = -12.25 + vec012; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    uint8    r0807 = vec011 + 123456.;
    auto     r0808 = 123456. + vec012;
    uint8    r0809 = vec011 + 123456.25; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    uint4    r0810 = 123456.25 + vec012; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    auto     r0811 = vec011 + -123456789.; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    uint4    r0812 = -123456789. + vec012; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    uint8    r0813 = vec011 + -123456789.25; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    uint4    r0814 = -123456789.25 + vec012; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    auto     r0815 = vec011 + -123456789.25e40; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    uint4    r0816 = -123456789.25e40 + vec012; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    #endif // cl_khr_fp64
    int16    r0817 = vec013 + true;
    int8     r0818 = true + vec014;
    int16    r0819 = vec013 + false;
    int8     r0820 = false + vec014;
    int16    r0821 = vec013 + '\0';
    int8     r0822 = '\0' + vec014;
    int16    r0823 = vec013 + 'A';
    int8     r0824 = 'A' + vec014;
    auto     r0825 = vec013 + static_cast<char>(-12);
    int8     r0826 = static_cast<char>(-12) + vec014;
    auto     r0827 = vec013 + static_cast<uchar>('A');
    auto     r0828 = static_cast<uchar>('A') + vec014;
    int16    r0829 = vec013 + static_cast<uchar>(145);
    auto     r0830 = static_cast<uchar>(145) + vec014;
    int16    r0831 = vec013 + static_cast<short>(145);
    int8     r0832 = static_cast<short>(145) + vec014;
    auto     r0833 = vec013 + static_cast<short>(14501);
    auto     r0834 = static_cast<short>(14501) + vec014;
    int16    r0835 = vec013 + static_cast<short>(-17501);
    int8     r0836 = static_cast<short>(-17501) + vec014;
    int16    r0837 = vec013 + static_cast<ushort>(34501);
    int8     r0838 = static_cast<ushort>(34501) + vec014;
    int16    r0839 = vec013 + 1;
    int8     r0840 = 1 + vec014;
    auto     r0841 = vec013 + 10;
    int8     r0842 = 10 + vec014;
    auto     r0843 = vec013 + -10;
    int8     r0844 = -10 + vec014;
    int16    r0845 = vec013 + 100001;
    int8     r0846 = 100001 + vec014;
    auto     r0847 = vec013 + -100001;
    auto     r0848 = -100001 + vec014;
    int16    r0849 = vec013 + 100000001;
    auto     r0850 = 100000001 + vec014;
    auto     r0851 = vec013 + -100000001;
    int8     r0852 = -100000001 + vec014;
    auto     r0853 = vec013 + 100000000001; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    auto     r0854 = 100000000001 + vec014; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    int16    r0855 = vec013 + -100000000001; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    int8     r0856 = -100000000001 + vec014; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    auto     r0857 = vec013 + 100000000001UL; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    int8     r0858 = 100000000001UL + vec014; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    int16    r0859 = vec013 + -100000000001L; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    int8     r0860 = -100000000001L + vec014; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    #ifdef cl_khr_fp16
    int16    r0861 = vec013 + static_cast<half>(1.0f);
    auto     r0862 = static_cast<half>(1.0f) + vec014;
    int16    r0863 = vec013 + static_cast<half>(12.0f);
    int8     r0864 = static_cast<half>(12.0f) + vec014;
    int16    r0865 = vec013 + static_cast<half>(-12.0f);
    int8     r0866 = static_cast<half>(-12.0f) + vec014;
    auto     r0867 = vec013 + static_cast<half>(12.25f); // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    auto     r0868 = static_cast<half>(12.25f) + vec014; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    int16    r0869 = vec013 + static_cast<half>(-12.25f); // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    auto     r0870 = static_cast<half>(-12.25f) + vec014; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    #endif // cl_khr_fp16
    auto     r0871 = vec013 + 1.0f;
    auto     r0872 = 1.0f + vec014;
    int16    r0873 = vec013 + 12.0f;
    int8     r0874 = 12.0f + vec014;
    auto     r0875 = vec013 + -12.0f;
    auto     r0876 = -12.0f + vec014;
    auto     r0877 = vec013 + 12.25f; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    int8     r0878 = 12.25f + vec014; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    int16    r0879 = vec013 + -12.25f; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    auto     r0880 = -12.25f + vec014; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    int16    r0881 = vec013 + 123456.f;
    int8     r0882 = 123456.f + vec014;
    auto     r0883 = vec013 + 123456.25f; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    auto     r0884 = 123456.25f + vec014; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    #ifdef cl_khr_fp64
    int16    r0885 = vec013 + 1.0;
    auto     r0886 = 1.0 + vec014;
    int16    r0887 = vec013 + 12.0;
    auto     r0888 = 12.0 + vec014;
    auto     r0889 = vec013 + -12.0;
    auto     r0890 = -12.0 + vec014;
    int16    r0891 = vec013 + 12.25; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    int8     r0892 = 12.25 + vec014; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    auto     r0893 = vec013 + -12.25; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    auto     r0894 = -12.25 + vec014; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    int16    r0895 = vec013 + 123456.;
    int8     r0896 = 123456. + vec014;
    int16    r0897 = vec013 + 123456.25; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    int8     r0898 = 123456.25 + vec014; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    int16    r0899 = vec013 + -123456789.;
    auto     r0900 = -123456789. + vec014;
    auto     r0901 = vec013 + -123456789.25; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    int8     r0902 = -123456789.25 + vec014; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    int16    r0903 = vec013 + -123456789.25e40; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    auto     r0904 = -123456789.25e40 + vec014; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    #endif // cl_khr_fp64
    auto     r0905 = vec015 + true;
    auto     r0906 = true + vec016;
    ulong4   r0907 = vec015 + false;
    auto     r0908 = false + vec016;
    ulong4   r0909 = vec015 + '\0';
    ulong8   r0910 = '\0' + vec016;
    ulong4   r0911 = vec015 + 'A';
    ulong8   r0912 = 'A' + vec016;
    auto     r0913 = vec015 + static_cast<char>(-12); // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    auto     r0914 = static_cast<char>(-12) + vec016; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    auto     r0915 = vec015 + static_cast<uchar>('A');
    ulong8   r0916 = static_cast<uchar>('A') + vec016;
    auto     r0917 = vec015 + static_cast<uchar>(145);
    auto     r0918 = static_cast<uchar>(145) + vec016;
    auto     r0919 = vec015 + static_cast<short>(145);
    auto     r0920 = static_cast<short>(145) + vec016;
    auto     r0921 = vec015 + static_cast<short>(14501);
    ulong8   r0922 = static_cast<short>(14501) + vec016;
    auto     r0923 = vec015 + static_cast<short>(-17501); // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    auto     r0924 = static_cast<short>(-17501) + vec016; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    ulong4   r0925 = vec015 + static_cast<ushort>(34501);
    ulong8   r0926 = static_cast<ushort>(34501) + vec016;
    auto     r0927 = vec015 + 1;
    ulong8   r0928 = 1 + vec016;
    ulong4   r0929 = vec015 + 10;
    auto     r0930 = 10 + vec016;
    auto     r0931 = vec015 + -10; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    auto     r0932 = -10 + vec016; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    auto     r0933 = vec015 + 100001;
    auto     r0934 = 100001 + vec016;
    ulong4   r0935 = vec015 + -100001; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    ulong8   r0936 = -100001 + vec016; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    auto     r0937 = vec015 + 100000001;
    ulong8   r0938 = 100000001 + vec016;
    auto     r0939 = vec015 + -100000001; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    auto     r0940 = -100000001 + vec016; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    ulong4   r0941 = vec015 + 100000000001;
    auto     r0942 = 100000000001 + vec016;
    auto     r0943 = vec015 + -100000000001; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    auto     r0944 = -100000000001 + vec016; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    auto     r0945 = vec015 + 100000000001UL;
    ulong8   r0946 = 100000000001UL + vec016;
    ulong4   r0947 = vec015 + -100000000001L; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    ulong8   r0948 = -100000000001L + vec016; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    #ifdef cl_khr_fp16
    ulong4   r0949 = vec015 + static_cast<half>(1.0f);
    ulong8   r0950 = static_cast<half>(1.0f) + vec016;
    ulong4   r0951 = vec015 + static_cast<half>(12.0f);
    auto     r0952 = static_cast<half>(12.0f) + vec016;
    ulong4   r0953 = vec015 + static_cast<half>(-12.0f); // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    auto     r0954 = static_cast<half>(-12.0f) + vec016; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    auto     r0955 = vec015 + static_cast<half>(12.25f); // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    ulong8   r0956 = static_cast<half>(12.25f) + vec016; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    auto     r0957 = vec015 + static_cast<half>(-12.25f); // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    ulong8   r0958 = static_cast<half>(-12.25f) + vec016; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    #endif // cl_khr_fp16
    auto     r0959 = vec015 + 1.0f;
    auto     r0960 = 1.0f + vec016;
    ulong4   r0961 = vec015 + 12.0f;
    ulong8   r0962 = 12.0f + vec016;
    auto     r0963 = vec015 + -12.0f; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    ulong8   r0964 = -12.0f + vec016; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    ulong4   r0965 = vec015 + 12.25f; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    ulong8   r0966 = 12.25f + vec016; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    auto     r0967 = vec015 + -12.25f; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    auto     r0968 = -12.25f + vec016; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    auto     r0969 = vec015 + 123456.f;
    auto     r0970 = 123456.f + vec016;
    ulong4   r0971 = vec015 + 123456.25f; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    ulong8   r0972 = 123456.25f + vec016; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    #ifdef cl_khr_fp64
    auto     r0973 = vec015 + 1.0;
    auto     r0974 = 1.0 + vec016;
    ulong4   r0975 = vec015 + 12.0;
    auto     r0976 = 12.0 + vec016;
    auto     r0977 = vec015 + -12.0; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    auto     r0978 = -12.0 + vec016; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    auto     r0979 = vec015 + 12.25; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    auto     r0980 = 12.25 + vec016; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    auto     r0981 = vec015 + -12.25; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    auto     r0982 = -12.25 + vec016; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    ulong4   r0983 = vec015 + 123456.;
    auto     r0984 = 123456. + vec016;
    ulong4   r0985 = vec015 + 123456.25; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    auto     r0986 = 123456.25 + vec016; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    auto     r0987 = vec015 + -123456789.; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    auto     r0988 = -123456789. + vec016; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    auto     r0989 = vec015 + -123456789.25; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    ulong8   r0990 = -123456789.25 + vec016; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    auto     r0991 = vec015 + -123456789.25e40; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    auto     r0992 = -123456789.25e40 + vec016; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    #endif // cl_khr_fp64
    auto     r0993 = vec017 + true;
    auto     r0994 = true + vec018;
    auto     r0995 = vec017 + false;
    auto     r0996 = false + vec018;
    auto     r0997 = vec017 + '\0';
    auto     r0998 = '\0' + vec018;
    long2    r0999 = vec017 + 'A';
    long4    r1000 = 'A' + vec018;
    long2    r1001 = vec017 + static_cast<char>(-12);
    auto     r1002 = static_cast<char>(-12) + vec018;
    auto     r1003 = vec017 + static_cast<uchar>('A');
    auto     r1004 = static_cast<uchar>('A') + vec018;
    long2    r1005 = vec017 + static_cast<uchar>(145);
    auto     r1006 = static_cast<uchar>(145) + vec018;
    auto     r1007 = vec017 + static_cast<short>(145);
    long4    r1008 = static_cast<short>(145) + vec018;
    long2    r1009 = vec017 + static_cast<short>(14501);
    auto     r1010 = static_cast<short>(14501) + vec018;
    long2    r1011 = vec017 + static_cast<short>(-17501);
    auto     r1012 = static_cast<short>(-17501) + vec018;
    long2    r1013 = vec017 + static_cast<ushort>(34501);
    long4    r1014 = static_cast<ushort>(34501) + vec018;
    auto     r1015 = vec017 + 1;
    long4    r1016 = 1 + vec018;
    auto     r1017 = vec017 + 10;
    auto     r1018 = 10 + vec018;
    long2    r1019 = vec017 + -10;
    auto     r1020 = -10 + vec018;
    auto     r1021 = vec017 + 100001;
    auto     r1022 = 100001 + vec018;
    long2    r1023 = vec017 + -100001;
    long4    r1024 = -100001 + vec018;
    long2    r1025 = vec017 + 100000001;
    long4    r1026 = 100000001 + vec018;
    long2    r1027 = vec017 + -100000001;
    long4    r1028 = -100000001 + vec018;
    long2    r1029 = vec017 + 100000000001;
    long4    r1030 = 100000000001 + vec018;
    long2    r1031 = vec017 + -100000000001;
    long4    r1032 = -100000000001 + vec018;
    auto     r1033 = vec017 + 100000000001UL;
    auto     r1034 = 100000000001UL + vec018;
    auto     r1035 = vec017 + -100000000001L;
    long4    r1036 = -100000000001L + vec018;
    #ifdef cl_khr_fp16
    long2    r1037 = vec017 + static_cast<half>(1.0f);
    long4    r1038 = static_cast<half>(1.0f) + vec018;
    long2    r1039 = vec017 + static_cast<half>(12.0f);
    auto     r1040 = static_cast<half>(12.0f) + vec018;
    auto     r1041 = vec017 + static_cast<half>(-12.0f);
    long4    r1042 = static_cast<half>(-12.0f) + vec018;
    long2    r1043 = vec017 + static_cast<half>(12.25f); // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    auto     r1044 = static_cast<half>(12.25f) + vec018; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    auto     r1045 = vec017 + static_cast<half>(-12.25f); // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    long4    r1046 = static_cast<half>(-12.25f) + vec018; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    #endif // cl_khr_fp16
    long2    r1047 = vec017 + 1.0f;
    long4    r1048 = 1.0f + vec018;
    long2    r1049 = vec017 + 12.0f;
    auto     r1050 = 12.0f + vec018;
    auto     r1051 = vec017 + -12.0f;
    auto     r1052 = -12.0f + vec018;
    long2    r1053 = vec017 + 12.25f; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    auto     r1054 = 12.25f + vec018; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    long2    r1055 = vec017 + -12.25f; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    auto     r1056 = -12.25f + vec018; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    auto     r1057 = vec017 + 123456.f;
    auto     r1058 = 123456.f + vec018;
    long2    r1059 = vec017 + 123456.25f; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    long4    r1060 = 123456.25f + vec018; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    #ifdef cl_khr_fp64
    long2    r1061 = vec017 + 1.0;
    long4    r1062 = 1.0 + vec018;
    long2    r1063 = vec017 + 12.0;
    long4    r1064 = 12.0 + vec018;
    auto     r1065 = vec017 + -12.0;
    auto     r1066 = -12.0 + vec018;
    auto     r1067 = vec017 + 12.25; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    long4    r1068 = 12.25 + vec018; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    long2    r1069 = vec017 + -12.25; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    auto     r1070 = -12.25 + vec018; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    long2    r1071 = vec017 + 123456.;
    auto     r1072 = 123456. + vec018;
    long2    r1073 = vec017 + 123456.25; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    long4    r1074 = 123456.25 + vec018; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    long2    r1075 = vec017 + -123456789.;
    auto     r1076 = -123456789. + vec018;
    auto     r1077 = vec017 + -123456789.25; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    auto     r1078 = -123456789.25 + vec018; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    auto     r1079 = vec017 + -123456789.25e40; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    long4    r1080 = -123456789.25e40 + vec018; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    #endif // cl_khr_fp64
    #ifdef cl_khr_fp16
    auto     r1081 = vec019 + true;
    auto     r1082 = true + vec020;
    half4    r1083 = vec019 + false;
    auto     r1084 = false + vec020;
    auto     r1085 = vec019 + '\0';
    half4    r1086 = '\0' + vec020;
    auto     r1087 = vec019 + 'A';
    auto     r1088 = 'A' + vec020;
    auto     r1089 = vec019 + static_cast<char>(-12);
    half4    r1090 = static_cast<char>(-12) + vec020;
    auto     r1091 = vec019 + static_cast<uchar>('A');
    auto     r1092 = static_cast<uchar>('A') + vec020;
    auto     r1093 = vec019 + static_cast<uchar>(145);
    auto     r1094 = static_cast<uchar>(145) + vec020;
    half4    r1095 = vec019 + static_cast<short>(145);
    auto     r1096 = static_cast<short>(145) + vec020;
    half4    r1097 = vec019 + static_cast<short>(14501); // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    half4    r1098 = static_cast<short>(14501) + vec020; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    auto     r1099 = vec019 + static_cast<short>(-17501); // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    auto     r1100 = static_cast<short>(-17501) + vec020; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    half4    r1101 = vec019 + static_cast<ushort>(34501); // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    auto     r1102 = static_cast<ushort>(34501) + vec020; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    auto     r1103 = vec019 + 1;
    auto     r1104 = 1 + vec020;
    half4    r1105 = vec019 + 10;
    half4    r1106 = 10 + vec020;
    half4    r1107 = vec019 + -10;
    auto     r1108 = -10 + vec020;
    auto     r1109 = vec019 + 100001; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    half4    r1110 = 100001 + vec020; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    half4    r1111 = vec019 + -100001; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    half4    r1112 = -100001 + vec020; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    auto     r1113 = vec019 + 100000001; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    auto     r1114 = 100000001 + vec020; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    half4    r1115 = vec019 + -100000001; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    half4    r1116 = -100000001 + vec020; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    auto     r1117 = vec019 + 100000000001; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    auto     r1118 = 100000000001 + vec020; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    half4    r1119 = vec019 + -100000000001; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    auto     r1120 = -100000000001 + vec020; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    auto     r1121 = vec019 + 100000000001UL; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    half4    r1122 = 100000000001UL + vec020; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    half4    r1123 = vec019 + -100000000001L; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    half4    r1124 = -100000000001L + vec020; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    auto     r1125 = vec019 + static_cast<half>(1.0f);
    auto     r1126 = static_cast<half>(1.0f) + vec020;
    auto     r1127 = vec019 + static_cast<half>(12.0f);
    half4    r1128 = static_cast<half>(12.0f) + vec020;
    auto     r1129 = vec019 + static_cast<half>(-12.0f);
    half4    r1130 = static_cast<half>(-12.0f) + vec020;
    half4    r1131 = vec019 + static_cast<half>(12.25f);
    auto     r1132 = static_cast<half>(12.25f) + vec020;
    auto     r1133 = vec019 + static_cast<half>(-12.25f);
    half4    r1134 = static_cast<half>(-12.25f) + vec020;
    auto     r1135 = vec019 + 1.0f;
    half4    r1136 = 1.0f + vec020;
    half4    r1137 = vec019 + 12.0f;
    auto     r1138 = 12.0f + vec020;
    auto     r1139 = vec019 + -12.0f;
    half4    r1140 = -12.0f + vec020;
    half4    r1141 = vec019 + 12.25f;
    auto     r1142 = 12.25f + vec020;
    auto     r1143 = vec019 + -12.25f;
    auto     r1144 = -12.25f + vec020;
    auto     r1145 = vec019 + 123456.f; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    half4    r1146 = 123456.f + vec020; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    auto     r1147 = vec019 + 123456.25f; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    auto     r1148 = 123456.25f + vec020; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    #endif // cl_khr_fp16
    #ifdef cl_khr_fp64
    #ifdef cl_khr_fp16
    half4    r1149 = vec019 + 1.0;
    half4    r1150 = 1.0 + vec020;
    auto     r1151 = vec019 + 12.0;
    auto     r1152 = 12.0 + vec020;
    half4    r1153 = vec019 + -12.0;
    half4    r1154 = -12.0 + vec020;
    auto     r1155 = vec019 + 12.25;
    half4    r1156 = 12.25 + vec020;
    auto     r1157 = vec019 + -12.25;
    auto     r1158 = -12.25 + vec020;
    auto     r1159 = vec019 + 123456.; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    auto     r1160 = 123456. + vec020; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    auto     r1161 = vec019 + 123456.25; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    half4    r1162 = 123456.25 + vec020; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    half4    r1163 = vec019 + -123456789.; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    auto     r1164 = -123456789. + vec020; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    half4    r1165 = vec019 + -123456789.25; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    half4    r1166 = -123456789.25 + vec020; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    half4    r1167 = vec019 + -123456789.25e40; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    auto     r1168 = -123456789.25e40 + vec020; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    #endif // cl_khr_fp16
    #endif // cl_khr_fp64
    float4   r1169 = vec021 + true;
    float4   r1170 = true + vec022;
    auto     r1171 = vec021 + false;
    float4   r1172 = false + vec022;
    auto     r1173 = vec021 + '\0';
    auto     r1174 = '\0' + vec022;
    float4   r1175 = vec021 + 'A';
    auto     r1176 = 'A' + vec022;
    auto     r1177 = vec021 + static_cast<char>(-12);
    float4   r1178 = static_cast<char>(-12) + vec022;
    float4   r1179 = vec021 + static_cast<uchar>('A');
    auto     r1180 = static_cast<uchar>('A') + vec022;
    auto     r1181 = vec021 + static_cast<uchar>(145);
    float4   r1182 = static_cast<uchar>(145) + vec022;
    auto     r1183 = vec021 + static_cast<short>(145);
    float4   r1184 = static_cast<short>(145) + vec022;
    float4   r1185 = vec021 + static_cast<short>(14501);
    float4   r1186 = static_cast<short>(14501) + vec022;
    float4   r1187 = vec021 + static_cast<short>(-17501);
    float4   r1188 = static_cast<short>(-17501) + vec022;
    auto     r1189 = vec021 + static_cast<ushort>(34501);
    float4   r1190 = static_cast<ushort>(34501) + vec022;
    auto     r1191 = vec021 + 1;
    float4   r1192 = 1 + vec022;
    float4   r1193 = vec021 + 10;
    float4   r1194 = 10 + vec022;
    auto     r1195 = vec021 + -10;
    float4   r1196 = -10 + vec022;
    auto     r1197 = vec021 + 100001;
    auto     r1198 = 100001 + vec022;
    auto     r1199 = vec021 + -100001;
    float4   r1200 = -100001 + vec022;
    auto     r1201 = vec021 + 100000001; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    float4   r1202 = 100000001 + vec022; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    float4   r1203 = vec021 + -100000001; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    auto     r1204 = -100000001 + vec022; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    float4   r1205 = vec021 + 100000000001; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    float4   r1206 = 100000000001 + vec022; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    auto     r1207 = vec021 + -100000000001; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    float4   r1208 = -100000000001 + vec022; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    float4   r1209 = vec021 + 100000000001UL; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    auto     r1210 = 100000000001UL + vec022; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    auto     r1211 = vec021 + -100000000001L; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    float4   r1212 = -100000000001L + vec022; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    #ifdef cl_khr_fp16
    float4   r1213 = vec021 + static_cast<half>(1.0f);
    float4   r1214 = static_cast<half>(1.0f) + vec022;
    float4   r1215 = vec021 + static_cast<half>(12.0f);
    auto     r1216 = static_cast<half>(12.0f) + vec022;
    auto     r1217 = vec021 + static_cast<half>(-12.0f);
    auto     r1218 = static_cast<half>(-12.0f) + vec022;
    float4   r1219 = vec021 + static_cast<half>(12.25f);
    float4   r1220 = static_cast<half>(12.25f) + vec022;
    auto     r1221 = vec021 + static_cast<half>(-12.25f);
    auto     r1222 = static_cast<half>(-12.25f) + vec022;
    #endif // cl_khr_fp16
    float4   r1223 = vec021 + 1.0f;
    auto     r1224 = 1.0f + vec022;
    float4   r1225 = vec021 + 12.0f;
    auto     r1226 = 12.0f + vec022;
    float4   r1227 = vec021 + -12.0f;
    auto     r1228 = -12.0f + vec022;
    auto     r1229 = vec021 + 12.25f;
    float4   r1230 = 12.25f + vec022;
    auto     r1231 = vec021 + -12.25f;
    auto     r1232 = -12.25f + vec022;
    float4   r1233 = vec021 + 123456.f;
    float4   r1234 = 123456.f + vec022;
    float4   r1235 = vec021 + 123456.25f;
    auto     r1236 = 123456.25f + vec022;
    #ifdef cl_khr_fp64
    float4   r1237 = vec021 + 1.0;
    float4   r1238 = 1.0 + vec022;
    float4   r1239 = vec021 + 12.0;
    auto     r1240 = 12.0 + vec022;
    float4   r1241 = vec021 + -12.0;
    auto     r1242 = -12.0 + vec022;
    float4   r1243 = vec021 + 12.25;
    float4   r1244 = 12.25 + vec022;
    auto     r1245 = vec021 + -12.25;
    float4   r1246 = -12.25 + vec022;
    float4   r1247 = vec021 + 123456.;
    float4   r1248 = 123456. + vec022;
    float4   r1249 = vec021 + 123456.25;
    float4   r1250 = 123456.25 + vec022;
    float4   r1251 = vec021 + -123456789.;
    auto     r1252 = -123456789. + vec022;
    auto     r1253 = vec021 + -123456789.25;
    float4   r1254 = -123456789.25 + vec022;
    float4   r1255 = vec021 + -123456789.25e40; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    auto     r1256 = -123456789.25e40 + vec022; // expected-warning-re {{constant expression evaluates to {{.*}} which cannot be narrowed to type {{.*}} during scalar-to-vector conversion}} expected-note {{insert an explicit cast of scalar to}} expected-warning-re 0-1 {{implicit conversion from {{.*}} to {{.*}} changes value}}
    double4  r1257 = vec023 + true;
    auto     r1258 = true + vec024;
    double4  r1259 = vec023 + false;
    auto     r1260 = false + vec024;
    double4  r1261 = vec023 + '\0';
    auto     r1262 = '\0' + vec024;
    double4  r1263 = vec023 + 'A';
    auto     r1264 = 'A' + vec024;
    double4  r1265 = vec023 + static_cast<char>(-12);
    auto     r1266 = static_cast<char>(-12) + vec024;
    auto     r1267 = vec023 + static_cast<uchar>('A');
    auto     r1268 = static_cast<uchar>('A') + vec024;
    auto     r1269 = vec023 + static_cast<uchar>(145);
    auto     r1270 = static_cast<uchar>(145) + vec024;
    double4  r1271 = vec023 + static_cast<short>(145);
    double2  r1272 = static_cast<short>(145) + vec024;
    auto     r1273 = vec023 + static_cast<short>(14501);
    auto     r1274 = static_cast<short>(14501) + vec024;
    double4  r1275 = vec023 + static_cast<short>(-17501);
    auto     r1276 = static_cast<short>(-17501) + vec024;
    auto     r1277 = vec023 + static_cast<ushort>(34501);
    double2  r1278 = static_cast<ushort>(34501) + vec024;
    double4  r1279 = vec023 + 1;
    auto     r1280 = 1 + vec024;
    auto     r1281 = vec023 + 10;
    auto     r1282 = 10 + vec024;
    double4  r1283 = vec023 + -10;
    auto     r1284 = -10 + vec024;
    double4  r1285 = vec023 + 100001;
    double2  r1286 = 100001 + vec024;
    double4  r1287 = vec023 + -100001;
    auto     r1288 = -100001 + vec024;
    auto     r1289 = vec023 + 100000001;
    double2  r1290 = 100000001 + vec024;
    auto     r1291 = vec023 + -100000001;
    auto     r1292 = -100000001 + vec024;
    double4  r1293 = vec023 + 100000000001;
    auto     r1294 = 100000000001 + vec024;
    double4  r1295 = vec023 + -100000000001;
    auto     r1296 = -100000000001 + vec024;
    auto     r1297 = vec023 + 100000000001UL;
    auto     r1298 = 100000000001UL + vec024;
    auto     r1299 = vec023 + -100000000001L;
    double2  r1300 = -100000000001L + vec024;
    #ifdef cl_khr_fp16
    auto     r1301 = vec023 + static_cast<half>(1.0f);
    auto     r1302 = static_cast<half>(1.0f) + vec024;
    double4  r1303 = vec023 + static_cast<half>(12.0f);
    auto     r1304 = static_cast<half>(12.0f) + vec024;
    double4  r1305 = vec023 + static_cast<half>(-12.0f);
    double2  r1306 = static_cast<half>(-12.0f) + vec024;
    auto     r1307 = vec023 + static_cast<half>(12.25f);
    double2  r1308 = static_cast<half>(12.25f) + vec024;
    double4  r1309 = vec023 + static_cast<half>(-12.25f);
    auto     r1310 = static_cast<half>(-12.25f) + vec024;
    #endif // cl_khr_fp16
    auto     r1311 = vec023 + 1.0f;
    double2  r1312 = 1.0f + vec024;
    double4  r1313 = vec023 + 12.0f;
    auto     r1314 = 12.0f + vec024;
    auto     r1315 = vec023 + -12.0f;
    auto     r1316 = -12.0f + vec024;
    double4  r1317 = vec023 + 12.25f;
    double2  r1318 = 12.25f + vec024;
    auto     r1319 = vec023 + -12.25f;
    double2  r1320 = -12.25f + vec024;
    double4  r1321 = vec023 + 123456.f;
    auto     r1322 = 123456.f + vec024;
    auto     r1323 = vec023 + 123456.25f;
    double2  r1324 = 123456.25f + vec024;
    auto     r1325 = vec023 + 1.0;
    auto     r1326 = 1.0 + vec024;
    double4  r1327 = vec023 + 12.0;
    auto     r1328 = 12.0 + vec024;
    auto     r1329 = vec023 + -12.0;
    auto     r1330 = -12.0 + vec024;
    double4  r1331 = vec023 + 12.25;
    auto     r1332 = 12.25 + vec024;
    auto     r1333 = vec023 + -12.25;
    auto     r1334 = -12.25 + vec024;
    double4  r1335 = vec023 + 123456.;
    auto     r1336 = 123456. + vec024;
    auto     r1337 = vec023 + 123456.25;
    double2  r1338 = 123456.25 + vec024;
    double4  r1339 = vec023 + -123456789.;
    double2  r1340 = -123456789. + vec024;
    auto     r1341 = vec023 + -123456789.25;
    auto     r1342 = -123456789.25 + vec024;
    double4  r1343 = vec023 + -123456789.25e40;
    double2  r1344 = -123456789.25e40 + vec024;
    #endif // cl_khr_fp64
}
